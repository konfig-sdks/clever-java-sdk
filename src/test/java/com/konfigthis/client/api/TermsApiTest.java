/*
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.DistrictResponse;
import com.konfigthis.client.model.SchoolsResponse;
import com.konfigthis.client.model.SectionsResponse;
import com.konfigthis.client.model.TermResponse;
import com.konfigthis.client.model.TermsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TermsApi
 */
@Disabled
public class TermsApiTest {

    private static TermsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TermsApi(apiClient);
    }

    /**
     * Returns the district for a term
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDistrictByIdTest() throws ApiException {
        String id = null;
        DistrictResponse response = api.getDistrictById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of terms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        String count = null;
        TermsResponse response = api.getList()
                .limit(limit)
                .startingAfter(startingAfter)
                .endingBefore(endingBefore)
                .count(count)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns the schools for a term
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSchoolsForTermTest() throws ApiException {
        String id = null;
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        SchoolsResponse response = api.getSchoolsForTerm(id)
                .limit(limit)
                .startingAfter(startingAfter)
                .endingBefore(endingBefore)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns the sections for a term
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSectionsTest() throws ApiException {
        String id = null;
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        SectionsResponse response = api.getSections(id)
                .limit(limit)
                .startingAfter(startingAfter)
                .endingBefore(endingBefore)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a specific term
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificTermTest() throws ApiException {
        String id = null;
        TermResponse response = api.getSpecificTerm(id)
                .execute();
        // TODO: test validations
    }

}
